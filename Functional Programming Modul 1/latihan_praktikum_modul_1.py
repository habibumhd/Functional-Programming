# -*- coding: utf-8 -*-
"""Latihan Praktikum Modul 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bteJt-2xNqV_4bmnIeuFtBfNRUpEJKBg
"""

# Latihan Praktikum Modul 1
# Kegiatan 1

# Fungsi untuk pengurangan
def minus(a, b):
    return a - b

# Fungsi untuk perkalian
def mult(a, b):
    return a * b

# Fungsi untuk pembagian
def div(a, b):
    if type(b) == int and b == 0:
        return "Tidak dapat dibagi nol"
    return a / b

# Fungsi untuk menghitung hasil
def tree(expression_tree):
    if type(expression_tree) == tuple:
        left, operator, right = expression_tree
        if operator == '+':
            return tree(left) + tree(right)
        elif operator == '-':
            return tree(left) - tree(right)
        elif operator == '*':
            return tree(left) * tree(right)
        elif operator == '/':
            return tree(left) / tree(right)
    else:
        return expression_tree

# Contoh pohon ekspresi: (2 + 3) * (5 - 1)
expression_tree = ((2, '+', 3), '*', (5, '-', 1))

# Menghitung hasil ekspresi pohon
result = tree(expression_tree)

print("Hasil evaluasi pohon ekspresi:", result)

# Latihan Praktikum Modul 1
# Kegiatan 2

random_list = [105, 3.1, "Hello", 737, "Python", 2.7, "World", 412, 5.5, "AI"]

list_float = ()
for item in random_list:
  if type(item) == float:
    list_float = list_float + (item,)

list_string = []
for item in random_list:
  if type(item) == str:
    list_string.append(item,)

list_dict = {'Satuan' : [], 'Puluhan' : [], 'Ratusan' : []}
for item in random_list:
    if type(item) == int:
        if 0 <= item < 10:
            list_dict['Satuan'].append(item)
        elif 10 <= item < 100:
            list_dict['Puluhan'].append(item)
        elif 100 <= item < 1000:
            list_dict['Ratusan'].append(item)

print("Data Float  :", list_float)
print("Data String :", list_string)
print("Data Satuan :", list_dict['Satuan'])
print("Data Satuan :", list_dict['Puluhan'])
print("Data Ratusan:", list_dict['Ratusan'])

# Latihan Praktikum Modul 1
# Kegiatan 3: Sistem Penilaian Akhir Mahasiswa

# Tambahkan Fungsi Untuk Menghitung Nilai Akhir
def penilaian(uts, uas):
    return (uts + uas) / 2

# Tambahkan Fungsi Untuk Menghitung Nilai Akhir Semua Mahasiswa
def nilai_akhir_semua_mahasiswa(data_mahasiswa):
    nilai_akhir = {}
    for nama, nilai in data_mahasiswa.items():
        nilai_uts, nilai_uas = nilai['uts'], nilai['uas']
        nilai_akhir[nama] = penilaian(nilai_uts, nilai_uas)
    return nilai_akhir

def tampilkan_nilai_akhir(data_nilai_akhir):
    print("Hasil Nilai Akhir Mahasiswa:")
    for nama, nilai in data_nilai_akhir.items():
        print(f"Nama: {nama}\tNilai Akhir: {nilai:.2f}")

def main():
    data_mahasiswa = {
        'Mamat': {'uts': 75, 'uas': 100},
        'Wawan': {'uts': 75, 'uas': 75},
        'Budi': {'uts': 60, 'uas': 45},
        'Iman': {'uts' : 25, 'uas': 100}
    }

    data_nilai_akhir = nilai_akhir_semua_mahasiswa(data_mahasiswa)
    tampilkan_nilai_akhir(data_nilai_akhir)

if __name__ == "__main__":
    main()